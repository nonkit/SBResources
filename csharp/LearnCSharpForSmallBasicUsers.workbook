---
packages:
- id: SmallBasic.Workbook
  version: 1.2.0
uti: com.xamarin.workbook
platforms:
- WPF
---

# Learn C# for Small Basic Users

Small Basic users can easily learn C# with Xamarin Workbooks.  Also C# users learn Small Basic library with SmallBasic.Workbook.

## Add Package

At first, select \[File] \[Add Package], enter “SmallBasic” in Search NuGet text box, select “SmallBasic.Workbook 1.2.0”, and push \[ADD PACKAGE] button.

```csharp
#r "SmallBasicLibrary"
```

## using Directive

Next, type following code to use Small Basic library.  While typing, you can see InteliSense candidate.  Hit enter key to complete typing.  And don’t forget to add semicolon to end C# statement.

```csharp
using Microsoft.SmallBasic.Library;
```

## Define Variables

Then, define Small Basic variables as Primitive type.

```csharp
public Primitive gw, gh, x, y;
```

## Initialize GraphicsWindow

These lines are almost the same with Small Basic code.  But don't forget semicolons.

```csharp
gw = 598;
gh = 428;
GraphicsWindow.Width = gw;
GraphicsWindow.Height = gh;
GraphicsWindow.BackgroundColor = "SkyBlue";
GraphicsWindow.BrushColor = "Gray";
```

## Draw Grid

Following code draws grid.  For statement in Small Basic must be re-written as for statement in C#.

In Small Basic:

> For y = 0 To gh Step 50\
>   …\
> EndFor

In C#:

> for (y = 0; y \<= gh; y += 50) {\
> … ;\
> }

```csharp
GraphicsWindow.PenColor = "#CCCCCC";
for (y = 0; y <= gh; y += 50) {
    GraphicsWindow.DrawLine(0, y, gw, y);
}
for (x = 0; x <= gw; x += 50) {
    GraphicsWindow.DrawLine(x, 0, x, gh);
}
GraphicsWindow.PenColor = "#999999";
for (y = 0; y <= gh; y += 100) {
    GraphicsWindow.DrawLine(0, y, gw, y);
    GraphicsWindow.DrawText(2, y + 2, y);
}
for (x = 0; x <= gw; x += 100) {
    GraphicsWindow.DrawLine(x, 0, x, gh);
    GraphicsWindow.DrawText(x + 2, 2, x);
}
GraphicsWindow.PenWidth = 0;
```

## Draw a Car

Following code draw a car.  In C#, comment line starts with // instead of ‘ in Small Basic.

Select \[Run] \[Run All] to run all code here.

```csharp
GraphicsWindow.Title = "Design Your Original Car";
// ground
GraphicsWindow.BrushColor = "Gray";
GraphicsWindow.FillRectangle(0, 400, gw, gh - 400);
// light
GraphicsWindow.BrushColor = "#99FFFFFF";
GraphicsWindow.FillEllipse(100, 250, 50, 50);
// top
GraphicsWindow.FillEllipse(250, 150, 200, 200);
// tail lump
GraphicsWindow.BrushColor = "#99FF0000";
GraphicsWindow.FillEllipse(500, 250, 50, 50);
// body
GraphicsWindow.BrushColor = "DarkOrange";
GraphicsWindow.FillEllipse(100, 250, 450, 100);
// wheels
GraphicsWindow.BrushColor = "#333333";
GraphicsWindow.FillEllipse(150, 300, 100, 100);
GraphicsWindow.FillEllipse(375, 300, 100, 100);
GraphicsWindow.BrushColor = "Silver";
GraphicsWindow.FillEllipse(170, 320, 60, 60);
GraphicsWindow.FillEllipse(395, 320, 60, 60);
// bumpers
GraphicsWindow.FillRectangle(100, 300, 50, 10);
GraphicsWindow.FillRectangle(500, 300, 50, 10);
```

## See Also

* [using Directive (C# Reference)](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-directive)

* [for (C# Reference)](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/for)